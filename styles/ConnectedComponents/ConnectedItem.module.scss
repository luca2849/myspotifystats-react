@use "../../util/styles/mixins/media" as *;

.ConnectedItem {
	display: flex;
	flex-direction: column;
	border-width: 2px;
	border-style: solid;
	// 3 per-row with some spacing
	width: 27.5%;
	padding: 2rem;
	border-radius: 1rem;
	margin: 3rem 0;
	position: relative;
	z-index: 10;
	// Block mouse hover effects for JS effect
	pointer-events: none;
	@include for-laptop {
		width: 80%;
	}

	& ._overlay {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
		border-radius: inherit;
		// Allow mouse effects only on the overlay
		pointer-events: all;
	}

	& ._top {
		display: flex;
		flex-direction: column;
		align-items: center;
	}

	& ._icon {
		font-size: 2.5rem;
	}

	& ._body {
		white-space: pre-line;
		padding: 0.5rem;
		text-align: center;
		letter-spacing: 1px;
	}

	@mixin lineDown() {
		height: 7rem;
		width: 0px;
		top: calc(100% + 3.75rem);
		left: calc(50%);
		transform: translate(0%, -50%);
		border-left: 5px dashed;
	}

	// Section for connecting lines
	&::after,
	&::before {
		content: " ";
		display: block;
		position: absolute;
		transform: translate(-50%, -50%);
		border-color: inherit;
	}

	// Last in row (down)
	&:nth-of-type(3n) {
		&::after {
			height: 3rem;
			width: 2.5px;
			top: calc(100% + 1.5rem);
			left: calc(50%);
			border-left: 5px dashed;
		}
		@include for-laptop {
			display: none;
		}
	}

	// Long horizontal
	&:nth-of-type(3n) {
		&::before {
			height: 2.5px;
			// Width of container minus one full card width
			// (for half of 1st and half of 3rd)
			width: calc(60vw - 100%);
			top: calc(100% + 3rem);
			// Shift start to exact middle of end card
			left: calc(50% - calc(calc(60vw - 100%) / 2));
			border-top: 5px dashed;
			@include for-laptop {
				display: none;
			}
		}
	}

	// First in row (down)
	&:nth-of-type(3n + 1):not(:first-of-type) {
		&::before {
			height: 3rem;
			width: 2.5px;
			top: calc(0% - 1.5rem);
			left: calc(50%);
			border-left: 5px dashed;
			@include for-laptop {
				display: none;
			}
		}
	}

	// Inter-row connections
	&:not(:nth-of-type(3n)):not(:last-of-type) {
		&::after {
			height: 2.5px;
			width: 10rem;
			border-top: 5px dashed;
			top: 50%;
			left: calc(100% + 5rem);
			@include for-laptop {
				@include lineDown();
			}
		}
	}
}
